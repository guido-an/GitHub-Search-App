{"version":3,"sources":["config/setLanguage.js","api/github.js","github-logo.svg","components/Footer.js","translations/footer.js","components/Spinner.js","App.js","index.js"],"names":["setLanguage","array","browserLang","filter","elem","lang","includes","navigator","language","length","strings","axios","create","baseURL","process","module","exports","copyright","Footer","style","textAlign","padding","className","href","target","rel","Spinner","height","position","top","Home","React","lazy","RepoPage","App","state","repos","reposCopy","apiTimeResponse","getSearchTerm","term","a","github","get","res","getApiTimeResponse","setState","data","repositories","console","log","myEntry","performance","getEntriesByType","entry","name","resTime","duration","toFixed","handleCheckBox","e","reposByWatchers","sort","b","watchers","checked","minHeight","to","src","logo","width","display","margin","alt","fallback","exact","path","render","props","Component","ReactDOM","document","querySelector"],"mappings":"yGAAO,SAASA,EAAaC,GAC3B,IAAMC,EAAcD,EAAME,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,SAASC,UAAUC,aAEtE,OADeN,EAAYO,OAAS,EAAIP,EAAY,GAAGQ,QAAUT,EAAM,GAAGS,QAF5E,mC,gCCAA,qBAEeC,QAAMC,OAAO,CAC1BC,QAASC,kD,mBCHXC,EAAOC,QAAU,IAA0B,yC,qQCInCC,EAAcjB,YCJM,CAC1B,CACEK,KAAM,KACNK,QAAS,CACPO,UAAW,eAGf,CACEZ,KAAM,KACNK,QAAS,CACPO,UAAW,iBAGf,CACEZ,KAAM,MACNK,QAAS,CACPO,UAAW,gBDZTA,UAUOC,MARf,WACE,OACE,gCACE,uBAAGC,MAAO,CAAEC,UAAW,SAAUC,QAAS,QAAUC,UAAU,QAA9D,WAA8EL,EAA9E,IAAyF,uBAAGM,KAAK,8BAA8BC,OAAO,SAASC,IAAI,uBAA1D,oBEIhFC,EAXC,WACd,OACE,yBAAKJ,UAAU,aAAaH,MAAO,CAAEQ,OAAQ,UAC3C,yBAAKL,UAAU,4BAA4BH,MAAO,CAAES,SAAU,WAAYC,IAAK,QAC7E,yBAAKP,UAAU,kBAAf,YAEF,8BCDAQ,EAAOC,IAAMC,MAAK,kBAAM,gCACxBC,EAAWF,IAAMC,MAAK,kBAAM,gCAmEnBE,E,2MA9DbC,MAAQ,CACNC,MAAO,GACPC,UAAW,GACXC,gBAAiB,M,EAGnBC,c,uCAAgB,WAAMC,GAAN,eAAAC,EAAA,+EAEMC,IAAOC,IAAP,qCAAyCH,IAF/C,OAENI,EAFM,OAIZ,EAAKC,qBAEL,EAAKC,SAAS,CAAEV,MAAOQ,EAAIG,KAAKC,aAAcX,UAAWO,EAAIG,KAAKC,eANtD,gDASZC,QAAQC,IAAR,MATY,yD,wDAahBL,mBAAqB,WACnB,IAAMM,EAAUC,YAAYC,iBAAiB,YAAYlD,QAAO,SAAAmD,GAAK,OAAKA,EAAMC,KAAKjD,SAASQ,mDAE1F0C,GAAaL,EADLA,EAAQ1C,OAAS,GACGgD,SAAY,KAAOC,QAAQ,GAE3D,EAAKZ,SAAS,CAAER,gBAAiBkB,K,EAGnCG,eAAiB,SAAAC,GACf,IAAMC,EAAkB,YAAI,EAAK1B,MAAMC,OAAO0B,MAAK,SAACrB,EAAGsB,GAAJ,OAAYtB,EAAEuB,SAAWD,EAAEC,SAAa,GAAK,KAChGJ,EAAEpC,OAAOyC,QAAU,EAAKnB,SAAS,CAAEV,MAAOyB,IAAqB,EAAKf,SAAS,CAAEV,MAAO,EAAKD,MAAME,a,wEAGxF,IAAD,OACR,OACE,iCACE,yBAAKf,UAAU,eAAeH,MAAO,CAAE+C,UAAW,UAChD,kBAAC,IAAD,CAAMC,GAAG,KAAI,yBAAKC,IAAKC,IAAMlD,MAAO,CAAEmD,MAAO,OAAQC,QAAS,QAASC,OAAQ,aAAeC,IAAI,iBAChG,kBAAC,IAAD,KACA,kBAAC,WAAD,CAAUC,SAAU,kBAAC,EAAD,OACjB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAAC,GAAK,OAC9B,kBAAChD,EAAD,iBACMgD,EADN,CAEEvC,cAAe,EAAKA,cACpBH,MAAO,EAAKD,MAAMC,MAClBE,gBAAiB,EAAKH,MAAMG,gBAC5BqB,eAAgB,EAAKA,qBAG3B,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,sBAAsBC,OAAQ,SAAAC,GAAK,OAChD,kBAAC7C,EAAD,iBAAc6C,EAAd,CACA1C,MAAO,EAAKD,MAAMC,eAMhC,kBAAC,EAAD,W,GAzDW2C,aCPlBC,IAASH,OACP,kBAAC,IAAD,KAAe,kBAAC,EAAD,OACfI,SAASC,cAAc,Y","file":"static/js/main.029ce49b.chunk.js","sourcesContent":["export function setLanguage (array) {\n  const browserLang = array.filter(elem => elem.lang.includes(navigator.language))\n  const myLang = browserLang.length > 0 ? browserLang[0].strings : array[0].strings\n  return myLang\n}\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n})\n","module.exports = __webpack_public_path__ + \"static/media/github-logo.07883e93.svg\";","import React from 'react'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/footer'\n\nconst { copyright } = setLanguage(translations)\n\nfunction Footer () {\n  return (\n    <footer>\n      <p style={{ textAlign: 'center', padding: '20px' }} className='text'>@2020 | {copyright} <a href='https://github.com/guido-an' target='_blank' rel='noopener noreferrer'>Guido Carucci</a></p>\n    </footer>\n  )\n}\n\nexport default Footer\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      copyright: 'Created by'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      copyright: 'Gemaakt door'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      copyright: 'Creato da'\n    }\n  }\n]\n","import React from 'react'\n\nconst Spinner = () => {\n  return (\n    <div className='ui segment' style={{ height: '100vh' }}>\n      <div className='ui active inverted dimmer' style={{ position: 'relative', top: '40%' }}>\n        <div className='ui text loader'>Loading</div>\n      </div>\n      <p />\n    </div>\n  )\n}\n\nexport default Spinner\n","import './App.css'\nimport React, { Component, Suspense } from 'react'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport github from './api/github'\nimport logo from './github-logo.svg'\nimport Footer from './components/Footer'\nimport Spinner from './components/Spinner'\nconst Home = React.lazy(() => import('./pages/Home'));\nconst RepoPage = React.lazy(() => import('./pages/RepoPage'));\n\n\n\nclass App extends Component {\n  state = {\n    repos: [],\n    reposCopy: [],\n    apiTimeResponse: null\n  }\n\n  getSearchTerm = async term => {\n    try {\n      const res = await github.get(`/api/search/repositories?q=${term}`)\n      \n      this.getApiTimeResponse()\n    \n      this.setState({ repos: res.data.repositories, reposCopy: res.data.repositories })  \n      \n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  getApiTimeResponse = () => {\n    const myEntry = performance.getEntriesByType(\"resource\").filter(entry =>  entry.name.includes(process.env.REACT_APP_API_URL) )\n    let index = myEntry.length - 1\n    let resTime = ( (myEntry[index].duration) / 1000 ).toFixed(2)\n  \n    this.setState({ apiTimeResponse: resTime })\n  }\n\n  handleCheckBox = e => {\n    const reposByWatchers = [...this.state.repos].sort((a, b) => ( a.watchers < b.watchers ) ? 1 : -1 )\n    e.target.checked ? this.setState({ repos: reposByWatchers }) : this.setState({ repos: this.state.reposCopy })\n  }\n\n  render () {   \n    return (\n      <section>\n        <div className='ui container' style={{ minHeight: '100vh' }}>\n          <Link to=\"/\"><img src={logo} style={{ width: '90px', display: 'block', margin: '10px auto' }} alt=\"github-logo\" /></Link>\n            <Switch>\n            <Suspense fallback={<Spinner/>}>\n               <Route exact path=\"/\" render={props => \n                    <Home\n                      {...props}\n                      getSearchTerm={this.getSearchTerm}\n                      repos={this.state.repos}\n                      apiTimeResponse={this.state.apiTimeResponse}\n                      handleCheckBox={this.handleCheckBox}\n                    />}\n                />\n                <Route exact path=\"/repos/:owner/:repo\" render={props => \n                     <RepoPage {...props} \n                     repos={this.state.repos} \n                     />}  \n                />\n                </Suspense>\n            </Switch>\n        </div>\n       <Footer/>\n      </section>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}