{"version":3,"sources":["components/RepoCard.js","translations/repoCard.js","components/SearchBar.js","translations/searchBar.js","components/ReposList.js","components/SelectInput.js","translations/selectInput.js","pages/Home.js","translations/home.js"],"names":["linkText","setLanguage","lang","strings","RepoCard","repo","description","substring","className","full_name","length","watchers","to","owner","login","name","title","responseTime","placeholder","subtitle","SearchBar","state","term","timeout","onInputChange","e","setState","target","value","clearTimeout","setTimeout","props","getSearchTerm","onSubmit","preventDefault","this","apiTimeResponse","type","onChange","React","Component","ReposList","reposList","repos","map","key","id","text","SelectInput","handleCheckBox","style","marginBottom","welcome1","spanText","welcome2","Home","marginTop","textAlign","color"],"mappings":"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","file":"static/js/3.6a0633f7.chunk.js","sourcesContent":["import './RepoCard.css'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/repoCard'\n\nconst { linkText } = setLanguage(translations)\n\nconst excerpLength = 55\n\nconst RepoCard = ({ repo }) => {\n  const description = repo.description ? repo.description.substring(0, excerpLength) : ''\n\n  return (\n    <div className='repo-card'>\n      <div className='repo-info'>\n        <div className='repo-heading'>\n          <p><strong>{repo.full_name}</strong></p>\n          {repo.description &&\n            <p className='desc text'>{repo.description.length <= excerpLength ? description : `${description} [...]`}</p>}\n        </div>\n        <p><i className='eye icon' /> Watchers: {repo.watchers}</p>\n      </div>\n      <Link to={`/repos/${repo.owner.login}/${repo.name}`} className='text'>> {linkText}</Link>\n    </div>\n  )\n}\n\nexport default RepoCard\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      linkText: 'View details'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      linkText: 'Bekijk details'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      linkText: 'Scopri di piÃ¹'\n    }\n  }\n]\n","import './SearchBar.css'\nimport React from 'react'\nimport { translations } from '../translations/searchBar'\nimport { setLanguage } from '../config/setLanguage'\n\nconst { title, placeholder, subtitle, responseTime } = setLanguage(translations)\nclass SearchBar extends React.Component {\n    state = {\n        term: '',\n        timeout: 0\n    }\n\n    onInputChange = e => {\n        this.setState({ term: e.target.value })\n        if (this.timeout) clearTimeout(this.timeout)\n        this.timeout = setTimeout(() => {\n          this.props.getSearchTerm(this.state.term)\n        }, 300)\n    }\n    \n  render () {\n    return (\n      <div className='ui segment search-bar'>\n        <form onSubmit={(e) => e.preventDefault()}className='ui form'>\n          <div className=\"search-bar-heading\">\n             <p><strong>{title}</strong></p>\n             <p>{responseTime}: <span>{this.props.apiTimeResponse ? `${this.props.apiTimeResponse}` : '0' }</span></p>\n          </div>\n          <p className=\"text subtitle\">{subtitle}</p>\n          <input type='text' className=\"search-input\" placeholder={placeholder} value={this.props.term} onChange={this.onInputChange} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      title: 'Looking for a GitHub repository?',\n      responseTime: 'Response time API',\n      placeholder: 'Find a repository...',\n      subtitle: 'You are in the right place.'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      title: 'Op zoek naar een GitHub-repository?',\n      responseTime: 'Reactietijd API',\n      placeholder: 'Vind een repository ...',\n      subtitle: 'Je bent op de juiste plek.'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      title: 'Stai cercando una repository su GitHub?',\n      responseTime: 'Tempo di risposta API',\n      placeholder: 'Trova una repository...',\n      subtitle: 'Sei nel posto giusto.'\n    }\n  }\n]\n","import './ReposList.css'\nimport React from 'react'\nimport RepoCard from './RepoCard'\n\nconst ReposList = ({ repos }) => {\n  const reposList = repos.map(repo => {\n    return <div key={repo.id} className='repo-container'><RepoCard repo={repo} /></div>\n  })\n\n  return (\n    <div className='repos-list'>\n      {reposList}\n    </div>\n  )\n}\n\nexport default ReposList\n","import React from 'react'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/selectInput'\n\nconst { text } = setLanguage(translations)\n\nconst SelectInput = ({ handleCheckBox, repos }) => {\n  return (\n    repos.length > 0 && (\n      <div className='ui toggle checkbox' style={{ marginBottom: '40px' }}>\n        <input onChange={handleCheckBox} type='checkbox' />\n        <label>{text}</label>\n      </div>\n    )\n  )\n}\n\nexport default SelectInput\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      text: 'Order by number of watchers'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      text: 'Sorteer op aantal kijkers'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      text: 'Ordina per numbero di osservatori'\n    }\n  }\n]\n","import React from 'react'\nimport { translations } from '../translations/home'\nimport { setLanguage } from '../config/setLanguage'\nimport SearchBar from '../components/SearchBar'\nimport ReposList from '../components/ReposList'\nimport SelectInput from '../components/SelectInput'\n\nconst { welcome1, spanText, welcome2 } = setLanguage(translations)\n\nconst Home = ({ repos, getSearchTerm, apiTimeResponse, handleCheckBox }) => {\n  return (\n    <div>\n      <SearchBar getSearchTerm={getSearchTerm} apiTimeResponse={apiTimeResponse} />\n      <SelectInput handleCheckBox={handleCheckBox} repos={repos} />\n      {repos && repos.length > 0 ? <ReposList repos={repos} />\n        : <h1 style={{ marginTop: '40px', textAlign: 'center' }}>{welcome1} <span style={{ color: '#2078C2' }}>{spanText}</span> {welcome2}</h1>}\n    </div>\n  )\n}\n\nexport default Home\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      welcome1: 'Start',\n      spanText: 'exploring GitHub',\n      welcome2: 'repositories'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      welcome1: 'Begin met het',\n      spanText: 'verkennen van GitHub',\n      welcome2: 'opslagplaatsen'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      welcome1: 'Inizia ad',\n      spanText: 'esplorare GitHub',\n      welcome2: ''\n    }\n  }\n]\n"],"sourceRoot":""}