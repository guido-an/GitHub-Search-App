{"version":3,"sources":["github-logo.svg","api/github.js","config/setLanguage.js","translations/footer.js","components/Footer.js","components/SearchBar.js","translations/searchBar.js","components/RepoCard.js","translations/repoCard.js","components/ReposList.js","components/SelectInput.js","translations/selectInput.js","pages/Home.js","translations/home.js","components/RepoDetails.js","translations/repoDetails.js","components/Slider.js","pages/RepoPage.js","App.js","index.js"],"names":["module","exports","axios","create","baseURL","process","setLanguage","array","filter","elem","lang","includes","navigator","language","strings","copyright","Footer","style","textAlign","padding","className","href","target","rel","title","responseTime","placeholder","subtitle","SearchBar","state","term","timeout","onInputChange","e","setState","value","clearTimeout","setTimeout","props","getSearchTerm","onSubmit","preventDefault","this","apiTimeResponse","type","onChange","React","Component","linkText","RepoCard","repo","description","substring","full_name","length","watchers","to","owner","login","name","ReposList","reposList","repos","map","key","id","width","text","SelectInput","handleCheckBox","marginBottom","welcome1","spanText","welcome2","Home","marginTop","color","author","RepoDetails","singleRepo","svn_url","forks","subscribers_count","display","justifyContent","fontSize","src","avatar_url","html_url","Slider","whirligig","onClick","prev","next","visibleSlides","gutter","ref","_whirligigInstance","jsx","RepoPage","getSingleRepo","a","match","params","github","get","response","console","log","data","window","scrollTo","prevProps","location","pathname","App","reposCopy","res","getApiTimeResponse","repositories","myEntry","performance","getEntriesByType","entry","resTime","duration","toFixed","reposByWatchers","sort","b","checked","minHeight","logo","margin","alt","exact","path","render","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.f1da34b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.07883e93.svg\";","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n})\n","export function setLanguage(array) {\n  const lang = array.filter(elem => elem.lang.includes(navigator.language) )\n  return lang[0].strings\n}","export const translations = [\n    {\n      lang: 'en',\n      strings: {\n        copyright: 'Created by'\n      }\n    },\n    {\n      lang: 'nl',\n      strings: {\n        copyright: 'Gemaakt door'\n      }\n    },\n    {\n      lang: 'ita',\n      strings: {\n        copyright: 'Creato da'\n      }\n    }\n  ]  ","import React from 'react'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/footer'\n\nconst { copyright } = setLanguage(translations)\n\nfunction Footer () {\n  return (\n    <footer>\n      <p style={{ textAlign: 'center', padding: '20px' }} className=\"text\">@2020 | {copyright} <a href=\"https://github.com/guido-an\" target=\"_blank\" rel=\"noopener noreferrer\">Guido Carucci</a></p>\n    </footer>\n  )\n}\n \nexport default Footer","import './SearchBar.css'\nimport React from 'react'\nimport { translations } from '../translations/searchBar'\nimport { setLanguage } from '../config/setLanguage'\n\nconst { title, placeholder, subtitle, responseTime } = setLanguage(translations)\nclass SearchBar extends React.Component {\n    state = {\n        term: '',\n        timeout: 0\n    }\n\n    onInputChange = e => {\n        this.setState({ term: e.target.value })\n        if (this.timeout) clearTimeout(this.timeout)\n        this.timeout = setTimeout(() => {\n          this.props.getSearchTerm(this.state.term)\n        }, 300)\n    }\n    \n  render () {\n    return (\n      <div className='ui segment search-bar'>\n        <form onSubmit={(e) => e.preventDefault()}className='ui form'>\n          <div className=\"search-bar-heading\">\n             <p><strong>{title}</strong></p>\n             <p>{responseTime}: <span>{this.props.apiTimeResponse ? `${this.props.apiTimeResponse}` : '0' }</span></p>\n          </div>\n          <p className=\"text subtitle\">{subtitle}</p>\n          <input type='text' className=\"search-input\" placeholder={placeholder} value={this.props.term} onChange={this.onInputChange} />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      title: 'Looking for a GitHub repository?',\n      responseTime: 'Response time API',\n      placeholder: 'Find a repository...',\n      subtitle: 'You are in the right place.'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      title: 'Op zoek naar een GitHub-repository?',\n      responseTime: 'Reactietijd API',\n      placeholder: 'Vind een repository ...',\n      subtitle: 'Je bent op de juiste plek.'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      title: 'Stai cercando una repository su GitHub?',\n      responseTime: 'Tempo di risposta API',\n      placeholder: 'Trova una repository...',\n      subtitle: 'Sei nel posto giusto.'\n    }\n  }\n]","import './RepoCard.css'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/repoCard'\n\nconst { linkText } = setLanguage(translations)\n\nconst excerpLength = 55\n\nconst RepoCard = ({ repo }) => {\n  \n  const description = repo.description ? repo.description.substring(0, excerpLength) : ''\n\n  return (\n    <div className='repo-card'>\n      <div className=\"repo-info\">\n        <div className=\"repo-heading\">\n           <p><strong>{repo.full_name}</strong></p>\n           {repo.description && \n           <p className='desc text'>{repo.description.length <= excerpLength ? description : `${description} [...]`}</p>\n           }\n         </div>\n         <p><i className=\"eye icon\"></i> Watchers: {repo.watchers}</p>\n         </div>\n      <Link to={`/repos/${repo.owner.login}/${repo.name}`} className=\"text\">> {linkText}</Link>\n    </div>\n  )\n}\n\nexport default RepoCard","export const translations = [\n    {\n      lang: 'en',\n      strings: {\n        linkText: 'View details'\n      }\n    },\n    {\n      lang: 'nl',\n      strings: {\n        linkText: 'Bekijk details'\n      }\n    },\n    {\n      lang: 'ita',\n      strings: {\n        linkText: 'Scopri di più'\n      }\n    }\n  ]  ","import './ReposList.css'\nimport React, { Suspense } from 'react'\nimport RepoCard from './RepoCard'\n\nconst ReposList = ({ repos }) => {\n  const reposList = repos.map(repo => {\n    return <div key={repo.id} style={{ width: '30%' }}><RepoCard repo={repo} /></div>\n  })\n\n  return (\n    <div className='repos-list'>\n      {reposList}\n    </div>\n  )\n}\n\nexport default ReposList","import React from 'react'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/selectInput'\n\nconst { text } = setLanguage(translations)\n\nconst SelectInput = ({ handleCheckBox, repos }) => {\n  return (\n    repos.length > 0 && (\n      <div className='ui toggle checkbox' style={{ marginBottom: '40px' }}>\n        <input onChange={handleCheckBox} type='checkbox' />\n        <label>{text}</label>\n      </div>\n    )\n  )\n}\n\nexport default SelectInput\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      text: 'Order by number of watchers'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      text: 'Sorteer op aantal kijkers'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      text: 'Ordina per numbero di osservatori'\n    }\n  }\n]\n","import React from 'react'\nimport { translations } from '../translations/home'\nimport { setLanguage } from '../config/setLanguage'\nimport SearchBar from '../components/SearchBar'\nimport ReposList from '../components/ReposList'\nimport SelectInput from '../components/SelectInput'\n\nconst { welcome1, spanText, welcome2 } = setLanguage(translations)\n\nconst Home = ({ repos, getSearchTerm, apiTimeResponse, handleCheckBox }) => {\n  return (\n    <div>\n      <SearchBar getSearchTerm={getSearchTerm} apiTimeResponse={apiTimeResponse} />\n      <SelectInput handleCheckBox={handleCheckBox} repos={repos} />\n      { repos.length > 0 ? <ReposList repos={repos} /> : \n      <h1 style={{ marginTop: '40px', textAlign: 'center' }}>{ welcome1 } <span style={{ color: '#2078C2' }}>{ spanText }</span> { welcome2 }</h1> \n      }\n    </div>\n  )\n}\n\nexport default Home","export const translations = [\n    {\n      lang: 'en',\n      strings: {\n        welcome1: 'Start',\n        spanText:'exploring GitHub',\n        welcome2: 'repositories'\n      }\n    },\n    {\n      lang: 'nl',\n      strings: {\n        welcome1: 'Begin met het',\n        spanText:'verkennen van GitHub',\n        welcome2: 'opslagplaatsen'\n      }\n    },\n    {\n      lang: 'ita',\n      strings: {\n        welcome1: 'Inizia ad',\n        spanText:'esplorare GitHub',\n        welcome2: ''\n      }\n    }\n  ]  ","import React from 'react'\nimport { setLanguage } from '../config/setLanguage'\nimport { translations } from '../translations/repoDetails'\n\nconst { author } = setLanguage(translations)\n\nconst RepoDetails = ({ singleRepo }) => {\n  const { full_name, description, svn_url, watchers, forks, subscribers_count } = singleRepo || {}\n  // const { login, avatar_url, html_url } = singleRepo ? singleRepo.owner : {}\n  // console.log(singleRepo)\n  return (\n    singleRepo && (\n      <div className='ui raised very padded text container segment'>\n        <h1 className='ui header'>{full_name}</h1>\n        <p className='text'>{description} <a href={svn_url} target='_blank'>{svn_url}</a></p>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <p><i className='eye icon' />Watchers: {watchers}</p>\n          <p><i className='code branch icon' />Forks: {forks}</p>\n          <p><i className='user icon' />Subscribers: {subscribers_count}</p>\n        </div>\n        {singleRepo.owner && (\n          <div style={{ fontSize: '15px', marginTop: '20px' }}>\n            <img className='ui avatar image' src={singleRepo.owner.avatar_url} />\n            <span>{author}: <a href={singleRepo.owner.html_url}>{singleRepo.owner.login}</a></span>\n          </div>\n        )}\n      </div>\n    )\n  )\n}\n\nexport default RepoDetails\n","export const translations = [\n  {\n    lang: 'en',\n    strings: {\n      author: 'Author'\n    }\n  },\n  {\n    lang: 'nl',\n    strings: {\n      author: 'Auteur'\n    }\n  },\n  {\n    lang: 'ita',\n    strings: {\n      author: 'Autore'\n    }\n  }\n]\n","import * as React from 'react'\nimport Whirligig from 'react-whirligig'\nimport RepoCard from './RepoCard'\n\nconst Slider = ({ repos }) => {\n  let whirligig\n  const next = () => whirligig.next()\n  const prev = () => whirligig.prev()\n\n  const reposList = repos.map(repo => {\n    return <RepoCard key={repo.id} repo={repo} />\n  })\n\n  return (\n    <div className='slider'>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <button onClick={prev} className='ui left labeled icon button'>\n           Prev\n          <i className='left arrow icon' />\n        </button>\n        <button onClick={next} className='ui right labeled icon button'>\n          <i className='right arrow icon' />\n          Next\n        </button>\n      </div>\n      <Whirligig\n        visibleSlides={3}\n        gutter='1em'\n        ref={(_whirligigInstance) => { whirligig = _whirligigInstance }}\n      >\n        {reposList}\n      </Whirligig>\n      <style jsx='true'>{`\n             @media(max-width: 968px){\n                .slider{\n                  display: none\n                }\n             }\n      `}\n      </style>\n    </div>\n  )\n}\n\nexport default Slider\n","import './RepoPage.css'\nimport React from 'react'\nimport github from '../api/github'\n\nimport RepoDetails from '../components/RepoDetails'\nimport Slider from '../components/Slider'\n\n\n// import { singleRepoTest } from '../test'\nclass RepoPage extends React.Component {\n  state = {\n    singleRepo: null\n  }\n  // state = {\n  //   singleRepo: singleRepoTest\n  // }\n\n  componentDidMount(){\n    window.scrollTo(0, 0);\n      this.getSingleRepo()\n  }\n\n  componentDidUpdate(prevProps) {  \n    if (\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n      this.getSingleRepo()\n    }\n  }\n\n  getSingleRepo = async () => {\n    const { owner, repo } = this.props.match.params\n    try{\n     const response =  await github.get(`/api/repos/${owner}/${repo}`)\n     console.log(response.data.repo, 'response')\n     this.setState({ singleRepo: response.data.repo })\n    }\n    catch(err) {\n      console.log(err)\n    }     \n   }\n\n  render(){   \n    return (\n        <div>\n          <RepoDetails singleRepo={this.state.singleRepo} />\n           <div style={{ marginTop: '80px' }}>\n              {this.props.repos.length > 0  &&\n               <Slider repos={this.props.repos}/>\n             }  \n           </div>\n       </div>\n      )\n }\n}\n\nexport default RepoPage","import './App.css'\nimport React from 'react'\nimport { Route, Switch, Link } from 'react-router-dom'\nimport github from './api/github'\nimport logo from './github-logo.svg'\nimport Footer from './components/Footer'\nimport Home from './pages/Home'\nimport RepoPage from './pages/RepoPage'\n\nclass App extends React.Component {\n  state = {\n    repos: [],\n    reposCopy: [],\n    apiTimeResponse: null\n  }\n\n  getSearchTerm = async term => {\n    try {\n      const res = await github.get(`/search/repositories?q=${term}`)\n      \n      this.getApiTimeResponse()\n    \n      this.setState({ repos: res.data.repositories, reposCopy: res.data.repositories })  \n      \n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  getApiTimeResponse = () => {\n    const myEntry = performance.getEntriesByType(\"resource\").filter(entry =>  entry.name.includes(process.env.REACT_APP_API_URL) )\n    let index = myEntry.length - 1\n    let resTime = ( (myEntry[index].duration) / 1000 ).toFixed(2)\n  \n    this.setState({ apiTimeResponse: resTime })\n  }\n\n  handleCheckBox = e => {\n    const reposByWatchers = [...this.state.repos].sort((a, b) => ( a.watchers < b.watchers ) ? 1 : -1 )\n    e.target.checked ? this.setState({ repos: reposByWatchers }) : this.setState({ repos: this.state.reposCopy })\n  }\n\n  render () {   \n    return (\n      <section>\n        <div className='ui container' style={{ minHeight: '100vh' }}>\n          <Link to=\"/\"><img src={logo} style={{ width: '90px', display: 'block', margin: '10px auto' }} alt=\"github-logo\" /></Link>\n            <Switch>\n               <Route exact path=\"/\" render={props => \n                    <Home\n                      {...props}\n                      getSearchTerm={this.getSearchTerm}\n                      repos={this.state.repos}\n                      apiTimeResponse={this.state.apiTimeResponse}\n                      handleCheckBox={this.handleCheckBox}\n                    />}\n                />\n                <Route exact path=\"/repos/:owner/:repo\" render={props => \n                     <RepoPage {...props} \n                     repos={this.state.repos} \n                     />} \n                />\n            </Switch>\n        </div>\n       <Footer/>\n      </section>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}